// Code generated by MockGen. DO NOT EDIT.
// Source: scores.go

// Package mock is a generated GoMock package.
package mock

import (
	internal "cow/internal"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockScoresStorage is a mock of ScoresStorage interface.
type MockScoresStorage struct {
	ctrl     *gomock.Controller
	recorder *MockScoresStorageMockRecorder
}

// MockScoresStorageMockRecorder is the mock recorder for MockScoresStorage.
type MockScoresStorageMockRecorder struct {
	mock *MockScoresStorage
}

// NewMockScoresStorage creates a new mock instance.
func NewMockScoresStorage(ctrl *gomock.Controller) *MockScoresStorage {
	mock := &MockScoresStorage{ctrl: ctrl}
	mock.recorder = &MockScoresStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScoresStorage) EXPECT() *MockScoresStorageMockRecorder {
	return m.recorder
}

// Replace mocks base method.
func (m *MockScoresStorage) Replace(score *internal.Score) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Replace", score)
	ret0, _ := ret[0].(error)
	return ret0
}

// Replace indicates an expected call of Replace.
func (mr *MockScoresStorageMockRecorder) Replace(score interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Replace", reflect.TypeOf((*MockScoresStorage)(nil).Replace), score)
}
