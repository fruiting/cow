kind: pipeline
type: docker
name: default

cl-templates:
  tags: &tags
    event: tag

  telegram_notify_deploy: &telegram_notify_deploy
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_notify_deploy_token
      chat_id:
        from_secret: telegram_notify_deploy_chat_id

steps:
  - name: telegram_notify_start_deploy_to_stage
    <<: *telegram_notify_deploy
    settings:
      message: "*${DRONE_REPO}*: Версия *${DRONE_TAG##v}* разворачивается для приложения cow"
    when: *tags

#  - name: linter
#    image: golangci/golangci-lint:latest
#    pull: always
#    commands:
#      - golangci-lint run -v
#
#  - name: test
#    image: golang:1.17
#    commands:
#      - sh ./run.sh unit
#
#  - name: test_race
#    image: golang:1.17
#    commands:
#      - sh ./run.sh unit_race
#
#  - name: build
#    image: golang:1.17
#    commands:
#      - CGO_ENABLED=0 go build ./cmd/cow
#    depends_on: [ test, test_race ]

  - name: publish_docker
    image: plugins/docker
    settings:
      repo: romaspirin/cow-backend
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
#    when: *tags
    depends_on: [ build ]

  - name: telegram_notify_finish_deploy_to_stage
    <<: *telegram_notify_deploy
    settings:
      message: "*${DRONE_REPO}*: Версия *${DRONE_TAG##v}* развернута для приложения cow"
    when: *tags
    depends_on: [ publish_docker ]
